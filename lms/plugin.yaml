
plugin:
    type: interface

    description:
        de: Logitech Mediaserver
        en: Logitech Mediaserver
    maintainer: OnkelAndy
    tester: Morg
    state: develop
    keywords: iot device logitechmediaserver lms sdp av
    version: '2.0.0'
    sh_minversion: '1.9.5'
    py_minversion: '3.7'
    sdp_minversion: '1.0.4'
    multi_instance: false
    restartable: true
    classname: lms

parameters:

    host:
        type: str
        mandatory: true

        description:
            de: Netzwerkziel/-host
            en: network host

    recursive_custom:
        type: bool
        default: true

        description:
            de: Vererbung von "custom" Itemattributen an untergeordnete Items aktivieren
            en: enable inheritance of "custom" item attributes to sub-items

    timeout:
        type: num
        default: 3

        description:
            de: Timeout für Geräteantwort
            en: timeout for device replies

    terminator:
        type: str
        default: "\r"

        description:
            de: Zeilen-/Antwortbegrenzer
            en: line or reply terminator

    web_port:
        type: int
        default: 9000

        description:
            de: Port für Webinterface-Verbindung (nötig für coverarturl). Wird der Port auf 0 gesetzt, wird für die Coverart URL kein Port verwendet (z.B. beim Einsatz eines Reverse Proxy).
            en: port for web interface connection (necessary for coverarturl). Is the port set to 0, no port is used for the cover art URL (e.g. when using a reverse proxy).

    web_host:
        type: str
        default: ''

        description:
            de: Host für Webinterface-Verbindung (nötig für coverarturl bei Einsatz eines Reverse Proxy). Wird dieser Parameter nicht definiert, wird die URL unter "Host" herangezogen.
            en: Host for web interface connection (necessary for coverarturl when using a reverse proxy). If this parameter is not set, the standard host URL is used.

    port:
        type: int
        default: 9090

        description:
            de: Port für CLI Netzwerkverbindung
            en: CLI network port

    autoreconnect:
        type: bool
        default: true

        description:
            de: Automatisches Neuverbinden bei Abbruch
            en: automatic reconnect on disconnect

    autoconnect:
        type: bool
        mandatory: false

        description:
            de: Automatisches Verbinden bei Senden
            en: automatic connect on send

    connect_retries:
        type: num
        default: 5

        description:
            de: Anzahl Verbindungsversuche
            en: number of connect retries

    connect_cycle:
        type: num
        default: 3

        description:
            de: Pause zwischen Verbindungsversuchen
            en: wait time between connect retries

    retry_cycle:
        type: num
        default: 30

        description:
            de: Pause zwischen Durchgängen von Verbindungsversuchen
            en: wait time between connect retry rounds

    retry_suspend:
        type: num
        default: 3

        description:
            de: Anzahl von Durchgängen vor Verbindungsabbruch oder Suspend-Modus
            en: number of connect rounds before giving up / entering suspend mode

    suspend_item:
        type: str
        default: ''

        description:
            de: Item-Pfad für das Standby-Item
            en: item path for standby switch item

    send_retries:
        type: num
        default: 0

        description:
            de: Anzahl Sendeversuche
            en: number of sending retries

        description_long:
            de: |4
                Anzahl Sendeversuche\n
                Kommt keine (passende) Antwort nach dem Senden
                eines Commands zurück, wird das Kommando nochmals
                gesendet, sofern der Wert über 0 liegt.
            en: |4
                number of sending retries\n
                If no (suiting) answer is received after sending
                a command the command is resent as long as this
                value is more than 0.

    send_retries_cycle:
        type: num
        valid_min: 1
        default: 1

        description:
            de: Pause zwischen Durchgängen von Sendeversuchen
            en: wait time between sending retry rounds

        description_long:
            de: |4
                Pause zwischen Durchgängen von Sendeversuchen\n
                Sind Send Retries aktiv, wird ein Scheduler erstellt,
                der im angegebenen Sekundentakt Kommandos erneut sendet,
                zu denen keine (passenden) Antworten erhalten wurden.
            en: |4
                wait time between sending retry rounds\n
                If send retries are active, a scheduler gets added
                that resends commands in the given cycle value (in seconds)
                where no (suiting) answer got received.

    delay_initial_read:
        type: num
        default: 0

        description:
            de: Warte nach Verbindungsaufbau mit dem Abfragen von Werten
            en: Wait after connection with querying values

    resume_initial_read:
        type: bool
        defaul: false

        description:
            de: Bei resume vom Plugin erstmaliges Lesen erneut durchführen
            en: Repeat initial read on resume

item_attributes:

    lms_command:
        type: str

        description:
            de: Legt das angegebene Kommando für das Item fest
            en: Assigns the given command to the item

    lms_read:
        type: bool

        description:
            de: Item liest/erhält Werte vom Gerät
            en: Item reads/receives data from the device

    lms_read_group:
        type: list(str)

        description:
            de: Weist das Item der angegebenen Gruppe zum gesammelten Lesen zu. Mehrere Gruppen können als Liste angegeben werden.
            en: Assigns the item to the given group for collective reading. Multiple groups can be provided as a list.

    lms_read_cycle:
        type: num

        description:
            de: Konfiguriert ein Intervall in Sekunden für regelmäßiges Lesen
            en: Configures a interval in seconds for cyclic read actions

    lms_read_initial:
        type: bool

        description:
            de: Legt fest, dass der Wert beim Start vom Gerät gelesen wird
            en: Sets item value to be read from the device on startup

    lms_write:
        type: bool

        description:
            de: Änderung des Items werden an das Gerät gesendet
            en: Changes to this item will be sent to the device

    lms_read_group_trigger:
        type: str

        description:
            de: Wenn diesem Item ein beliebiger Wert zugewiesen wird, werden alle zum Lesen konfigurierten Items der angegebenen Gruppe neu vom Gerät gelesen, bei Gruppe 0 werden alle zum Lesen konfigurierten Items neu gelesen. Das Item kann nicht gleichzeitig mit lms_command belegt werden.
            en: When set to any value, all items configured for reading for the given group will update their value from the device, if group is 0, all items configured for reading will update. The item cannot be used with lms_command in parallel.

    lms_valid_list:
        type: str

        description:
            de: Kommando, das eine valid_list(_re/_ci) definiert hat. Der Inhalt dieses Items ersetzt die Liste des entsprechenden Befehls.
            en: Command that has a valid_list(_re/_ci) parameter defined. The content of this item replaces the list of the respective command.

    lms_lookup:
        type: str

        description:
            de: Der Inhalt der Lookup-Tabelle mit dem angegebenen Namen wird beim Start einmalig als dict oder list in das Item geschrieben.
            en: The lookup table with the given name will be assigned to the item in dict or list format once on startup.

        description_long:
            de: |4-
                Der Inhalt der Lookup-Tabelle mit dem angegebenen Namen wird beim
                Start einmalig als dict oder list in das Item geschrieben.

                Durch Anhängen von "#<mode>" an den Namen der Tabelle kann die Art
                der Tabelle ausgewählt werden:
                - fwd liefert die Tabelle Gerät -> SmartHomeNG (Standard)
                - rev liefert die Tabelle SmartHomeNG -> Gerät
                - rci liefert die Tabelle SmarthomeNG -> Gerät in Kleinbuchstaben
                - list liefert die Liste der Namen für SmartHomeNG (z.B. für Auswahllisten in der Visu)
            en: |4-
                The lookup table with the given name will be assigned to the item
                in dict or list format once on startup.

                By appending "#<mode>" to the tables name the type of table can
                be selected:
                - fwd returns the table device -> SmartHomeNG (default)
                - rev returns the table SmartHomeNG -> device
                - rci returns the table SmartHomeNG -> device in lower case
                - list return the list of names for SmartHomeNG (e.g. for selection dropdowns in visu applications)

    lms_custom1:
        type: str

        description:
            de: MAC-Adresse des Wiedergabegerätes
            en: MAC address of the playback device

item_structs:

    server:

        read:
            type: bool
            enforce_updates: true
            lms_read_group_trigger@instance: server

        version:
            type: str
            lms_command@instance: server.version
            lms_read@instance: true
            lms_write@instance: false
            lms_read_group@instance:
            -   server
            lms_read_initial@instance: true

        restart:
            type: bool
            lms_command@instance: server.restart
            lms_read@instance: false
            lms_write@instance: true
            enforce_updates: true

        listenmode:
            type: bool
            lms_command@instance: server.listenmode
            lms_read@instance: true
            lms_write@instance: true

        playercount:
            type: num
            lms_command@instance: server.playercount
            lms_read@instance: true
            lms_write@instance: false
            lms_read_group@instance:
            -   server

        favoritescount:
            type: num
            lms_command@instance: server.favoritescount
            lms_read@instance: true
            lms_write@instance: false
            lms_read_group@instance:
            -   server
            lms_read_initial@instance: true

        syncgroups:

            read:
                type: bool
                enforce_updates: true
                lms_read_group_trigger@instance: server.syncgroups

            members:
                type: list
                lms_command@instance: server.syncgroups.members
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   server
                -   server.syncgroups
                lms_read_initial@instance: true

            names:
                type: list
                lms_command@instance: server.syncgroups.names
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   server
                -   server.syncgroups

        newclient:
            type: str
            lms_command@instance: server.newclient
            lms_read@instance: true
            lms_write@instance: false

        forgetclient:
            type: str
            lms_command@instance: server.forgetclient
            lms_read@instance: true
            lms_write@instance: false

        players:
            type: dict
            lms_command@instance: server.players
            lms_read@instance: true
            lms_write@instance: false
            lms_read_group@instance:
            -   server
            lms_read_initial@instance: true
            on_change: '.lu_names = {key: value["name"] for key, value in sh..self().items()}'

            lu_names:
                type: dict
                lms_lookup@instance: PLAYERS#fwd

                lookup:
                    type: list
                    lms_lookup@instance: PLAYERS#list

        playlists:

            read:
                type: bool
                enforce_updates: true
                lms_read_group_trigger@instance: server.playlists

            available:
                type: dict
                lms_command@instance: server.playlists.available
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   server
                -   server.playlists
                lms_read_initial@instance: true
                on_change:
                -   '.lu_ids = {value["id"]: key for key, value in sh..self().items()}'
                -   '.lu_urls = {value["url"]: key for key, value in sh..self().items()}'

                lu_ids:
                    type: dict
                    lms_lookup@instance: PLAYLIST_IDS#fwd

                    lookup:
                        type: list
                        lms_lookup@instance: PLAYLIST_IDS#list

                lu_urls:
                    type: dict
                    lms_lookup@instance: PLAYLIST_URLS#fwd

                    lookup:
                        type: list
                        lms_lookup@instance: PLAYLIST_URLS#list

            rename:
                type: str
                lms_command@instance: server.playlists.rename
                lms_read@instance: false
                lms_write@instance: true
                remark: '"needed value:<playlist_id> <newname> with a space inbetween"'

            delete:
                type: str
                lms_command@instance: server.playlists.delete
                lms_read@instance: true
                lms_write@instance: true
                enforce_updates: true

                lookup:
                    type: list
                    eval: sh....available.lu_ids.lookup.property.value
                    eval_trigger: '...available.lu_ids.lookup'

    database:

        read:
            type: bool
            enforce_updates: true
            lms_read_group_trigger@instance: database

        rescan:

            read:
                type: bool
                enforce_updates: true
                lms_read_group_trigger@instance: database.rescan

            start:
                type: str
                lms_command@instance: database.rescan.start
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true
                remark: '"playlists|onlinelibrary|external|full|full file://some/path"'

            running:
                type: bool
                lms_command@instance: database.rescan.running
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   database
                -   database.rescan
                lms_read_initial@instance: true
                lms_read_cycle@instance: '120'

            progress:
                type: str
                lms_command@instance: database.rescan.progress
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   database
                -   database.rescan

                poll:
                    type: bool
                    eval: True if sh....running() == True else None
                    enforce_updates: true
                    cycle: '20'
                    lms_read_group_trigger: database.rescan

                starttime:
                    type: str
                    eval_trigger: '..'
                    eval: '"-" if len(sh...()) == 0 else shtime.datetime_transform(float(sh.squeezebox.rescan.progress().split("||")[0])).strftime("%d.%m.%Y %H:%M:%S")'

                info:
                    type: str
                    eval_trigger: '..'
                    eval: '"-" if len(sh...()) < 3 else sh...().split("||")[2]'

                step:
                    type: num
                    eval_trigger: '..'
                    eval: 0 if len(sh...()) < 4 else sh...().split("||")[3]

                totalsteps:
                    type: num
                    eval_trigger: '..'
                    eval: 0 if len(sh...()) <5 else sh...().split("||")[4]

            runningtime:
                type: str
                lms_command@instance: database.rescan.runningtime
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   database
                -   database.rescan

            fail:
                type: str
                lms_command@instance: database.rescan.fail
                lms_read@instance: true
                lms_write@instance: false

            abortscan:
                type: bool
                lms_command@instance: database.rescan.abortscan
                lms_read@instance: true
                lms_write@instance: true
                enforce_updates: true

            wipecache:
                type: bool
                lms_command@instance: database.rescan.wipecache
                lms_read@instance: true
                lms_write@instance: true
                enforce_updates: true
                remark: Be aware - this starts a complete library rescan

        totalgenres:
            type: num
            lms_command@instance: database.totalgenres
            lms_read@instance: true
            lms_write@instance: false
            lms_read_group@instance:
            -   database
            lms_read_initial@instance: true

        totalduration:
            type: num
            lms_command@instance: database.totalduration
            lms_read@instance: true
            lms_write@instance: false
            lms_read_group@instance:
            -   database
            lms_read_initial@instance: true

            duration_format:
                type: str
                eval: "'{}d {}h {}i {}s'.format(int(sh...()//86400), int((sh...()%86400)//3600), int((sh...()%3600)//60), round((sh...()%3600)%60))"
                eval_trigger: '..'

        totalartists:
            type: num
            lms_command@instance: database.totalartists
            lms_read@instance: true
            lms_write@instance: false
            lms_read_group@instance:
            -   database
            lms_read_initial@instance: true

        totalalbums:
            type: num
            lms_command@instance: database.totalalbums
            lms_read@instance: true
            lms_write@instance: false
            lms_read_group@instance:
            -   database
            lms_read_initial@instance: true

        totalsongs:
            type: num
            lms_command@instance: database.totalsongs
            lms_read@instance: true
            lms_write@instance: false
            lms_read_group@instance:
            -   database
            lms_read_initial@instance: true

        totalplaylists:
            type: num
            lms_command@instance: database.totalplaylists
            lms_read@instance: true
            lms_write@instance: false
            lms_read_group@instance:
            -   database

    server_plugins:

        read:
            type: bool
            enforce_updates: true
            lms_read_group_trigger@instance: server_plugins

        trackstat:

            read:
                type: bool
                enforce_updates: true
                lms_read_group_trigger@instance: server_plugins.trackstat

            get_rating:
                type: str
                lms_command@instance: server_plugins.trackstat.get_rating
                lms_read@instance: true
                lms_write@instance: true

            set_rating:
                type: str
                lms_command@instance: server_plugins.trackstat.set_rating
                lms_read@instance: false
                lms_write@instance: true

    player_plugins:

        read:
            type: bool
            enforce_updates: true
            lms_read_group_trigger@instance: player_plugins

        customskip:

            read:
                type: bool
                enforce_updates: true
                lms_read_group_trigger@instance: player_plugins.customskip

            active_filter:
                type: str
                lms_command@instance: player_plugins.customskip.active_filter
                lms_read@instance: true
                lms_write@instance: true
                lms_read_group@instance:
                -   player_plugins
                -   player_plugins.customskip
                lms_read_initial@instance: true

            remove_filter:
                type: bool
                lms_command@instance: player_plugins.customskip.remove_filter
                lms_read@instance: false
                lms_write@instance: true

    player:

        read:
            type: bool
            enforce_updates: true
            lms_read_group_trigger@instance: player

        control:

            read:
                type: bool
                enforce_updates: true
                lms_read_group_trigger@instance: player.control

            power:
                type: bool
                lms_command@instance: player.control.power
                lms_read@instance: true
                lms_write@instance: true
                lms_read_group@instance:
                -   player
                -   player.control
                enforce_updates: true
                lms_read_initial@instance: true

            playmode:
                type: str
                lms_command@instance: player.control.playmode
                lms_read@instance: true
                lms_write@instance: true
                lms_read_group@instance:
                -   player
                -   player.control
                enforce_updates: true

            playpause:
                type: bool
                lms_command@instance: player.control.playpause
                lms_read@instance: true
                lms_write@instance: true
                enforce_updates: true

            stop:
                type: bool
                lms_command@instance: player.control.stop
                lms_read@instance: true
                lms_write@instance: true
                enforce_updates: true

            mute:
                type: bool
                lms_command@instance: player.control.mute
                lms_read@instance: true
                lms_write@instance: true
                lms_read_group@instance:
                -   player
                -   player.control
                enforce_updates: true
                lms_read_initial@instance: true

            volume:
                type: num
                lms_command@instance: player.control.volume
                lms_read@instance: true
                lms_write@instance: true
                lms_read_group@instance:
                -   player
                -   player.control
                lms_read_initial@instance: true

            volume_fading:
                type: num
                lms_command@instance: player.control.volume_fading
                lms_read@instance: false
                lms_write@instance: true

                goal:
                    type: num
                    visu_acl: rw
                    cache: 'True'

            volume_low:
                type: num
                lms_command@instance: player.control.volume_low
                lms_read@instance: false
                lms_write@instance: true
                cache: true
                enforce_updates: true
                initial_value: 60

            volume_high:
                type: num
                lms_command@instance: player.control.volume_high
                lms_read@instance: false
                lms_write@instance: true
                cache: true
                enforce_updates: true
                initial_value: 80

            volumeup:
                type: num
                lms_command@instance: player.control.volumeup
                lms_read@instance: false
                lms_write@instance: true
                cache: true
                enforce_updates: true
                initial_value: 1

            volumedown:
                type: num
                lms_command@instance: player.control.volumedown
                lms_read@instance: false
                lms_write@instance: true
                cache: true
                enforce_updates: true
                initial_value: 1

            set_alarm:
                type: str
                lms_command@instance: player.control.set_alarm
                lms_read@instance: true
                lms_write@instance: true
                on_change: ..alarms.query = True

            alarms:
                type: dict
                lms_command@instance: player.control.alarms
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   player
                -   player.control
                -   player.control.alarms
                lms_read_initial@instance: true

                query:
                    type: bool
                    enforce_updates: 'true'
                    lms_read_group_trigger: player.control.alarms

            sync:
                type: str
                lms_command@instance: player.control.sync
                lms_read@instance: true
                lms_write@instance: true
                lms_read_group@instance:
                -   player
                -   player.control
                enforce_updates: true
                lms_read_initial@instance: true
                remark: This can be either a name or MAC address of a connected player. Make sure to include the server struct to fill the lookup table correctly.

            sync_status:
                type: list
                lms_command@instance: player.control.sync_status
                lms_read@instance: false
                lms_write@instance: false

            unsync:
                type: bool
                lms_command@instance: player.control.unsync
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true

            display:
                type: str
                lms_command@instance: player.control.display
                lms_read@instance: true
                lms_write@instance: true
                lms_read_group@instance:
                -   player
                -   player.control
                lms_read_initial@instance: true

            connect:
                type: str
                lms_command@instance: player.control.connect
                lms_read@instance: true
                lms_write@instance: true
                remark: ip|www.mysqueezebox.com|www.test.mysqueezebox.com

            disconnect:
                type: str
                lms_command@instance: player.control.disconnect
                lms_read@instance: true
                lms_write@instance: true
                remark: ip|www.mysqueezebox.com|www.test.mysqueezebox.com

            time:
                type: num
                lms_command@instance: player.control.time
                lms_read@instance: true
                lms_write@instance: true
                lms_read_group@instance:
                -   player
                -   player.control
                -   player.control.time_poll
                enforce_updates: true

                poll:
                    type: bool
                    eval: True if sh....playmode() == "play" else None
                    enforce_updates: 'true'
                    cycle: '10'
                    lms_read_group_trigger: player.control.time_poll

            forward:
                type: num
                lms_command@instance: player.control.forward
                lms_read@instance: true
                lms_write@instance: true
                enforce_updates: true
                initial_value: 10

            rewind:
                type: num
                lms_command@instance: player.control.rewind
                lms_read@instance: true
                lms_write@instance: true
                enforce_updates: true
                initial_value: 10

            playitem:
                type: str
                lms_command@instance: player.control.playitem
                lms_read@instance: false
                lms_write@instance: true
                remark: provide specified song URL, playlist or directory. Gets player right away.

            sleep:
                type: num
                lms_command@instance: player.control.sleep
                lms_read@instance: true
                lms_write@instance: true
                lms_read_group@instance:
                -   player
                -   player.control
                lms_read_initial@instance: true

        playlist:

            read:
                type: bool
                enforce_updates: true
                lms_read_group_trigger@instance: player.playlist

            rename_current:
                type: str
                lms_command@instance: player.playlist.rename_current
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true

            delete_current:
                type: bool
                lms_command@instance: player.playlist.delete_current
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true
                remark: Be careful, instantly deletes the current playlist!

            repeat:
                type: str
                lms_command@instance: player.playlist.repeat
                lms_read@instance: true
                lms_write@instance: true
                lms_read_group@instance:
                -   player
                -   player.playlist
                lms_read_initial@instance: true
                initial_value: OFF
                remark: 0 = Off, 1 = Song, 2 = Playlist

                lookup:
                    type: list
                    lms_lookup@instance: REPEAT#list

            shuffle:
                type: str
                lms_command@instance: player.playlist.shuffle
                lms_read@instance: true
                lms_write@instance: true
                lms_read_group@instance:
                -   player
                -   player.playlist
                lms_read_initial@instance: true
                initial_value: OFF
                remark: 0 = Off, 1 = Song, 2 = Album

                lookup:
                    type: list
                    lms_lookup@instance: SHUFFLE#list

            index:
                type: str
                lms_command@instance: player.playlist.index
                lms_read@instance: true
                lms_write@instance: true
                lms_read_group@instance:
                -   player
                -   player.playlist

            current_name:
                type: str
                lms_command@instance: player.playlist.current_name
                lms_read@instance: true
                lms_write@instance: true
                lms_read_group@instance:
                -   player
                -   player.playlist

            current_url:
                type: str
                lms_command@instance: player.playlist.current_url
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   player
                -   player.playlist

            current_id:
                type: num
                lms_command@instance: player.playlist.current_id
                lms_read@instance: true
                lms_write@instance: true
                lms_read_group@instance:
                -   player
                -   player.playlist
                lms_read_initial@instance: true

            save:
                type: str
                lms_command@instance: player.playlist.save
                lms_read@instance: true
                lms_write@instance: true
                enforce_updates: true

            load:
                type: str
                lms_command@instance: player.playlist.load
                lms_read@instance: true
                lms_write@instance: true
                enforce_updates: true

            loadalbum:
                type: str
                lms_command@instance: player.playlist.loadalbum
                lms_read@instance: true
                lms_write@instance: true
                enforce_updates: true
                remark: <Genre> <Artist> <Album>. You can use * for any of the entries. Spaces need to be replaced by %20

            loadtracks:
                type: str
                lms_command@instance: player.playlist.loadtracks
                lms_read@instance: true
                lms_write@instance: true
                enforce_updates: true
                remark: loads and plays all songs matching the specified searchparam criteria directly

            additem:
                type: str
                lms_command@instance: player.playlist.additem
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true
                remark: provide specified song URL, playlist or directory

            addalbum:
                type: str
                lms_command@instance: player.playlist.addalbum
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true
                remark: <Genre> <Artist> <Album>. You can use * for any of the entries. Spaces need to be replaced by %20

            addtracks:
                type: str
                lms_command@instance: player.playlist.addtracks
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true
                remark: appends all songs matching the specified searchparam criteria onto the end of the playlist

            insertalbum:
                type: str
                lms_command@instance: player.playlist.insertalbum
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true
                remark: <Genre> <Artist> <Album>. You can use * for any of the entries. Spaces need to be replaced by %20

            insertitem:
                type: str
                lms_command@instance: player.playlist.insertitem
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true
                remark: provide specified song URL, playlist or directory

            deletesong:
                type: num
                lms_command@instance: player.playlist.deletesong
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true
                remark: provide songindex that should be deleted

            deletealbum:
                type: str
                lms_command@instance: player.playlist.deletealbum
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true
                remark: <Genre> <Artist> <Album>. You can use * for any of the entries. Spaces need to be replaced by %20

            deleteitem:
                type: str
                lms_command@instance: player.playlist.deleteitem
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true
                remark: provide specified song URL, playlist or directory

            tracks:
                type: num
                lms_command@instance: player.playlist.tracks
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   player
                -   player.playlist

            clear:
                type: bool
                lms_command@instance: player.playlist.clear
                lms_read@instance: true
                lms_write@instance: true
                enforce_updates: true
                remark: Might go berserk, use with care!

            preview:
                type: str
                lms_command@instance: player.playlist.preview
                lms_read@instance: true
                lms_write@instance: true

            next:
                type: num
                lms_command@instance: player.playlist.next
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true
                initial_value: 1

            previous:
                type: num
                lms_command@instance: player.playlist.previous
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true
                initial_value: 1

            modified:
                type: bool
                lms_command@instance: player.playlist.modified
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   player
                -   player.playlist

        info:

            read:
                type: bool
                enforce_updates: true
                lms_read_group_trigger@instance: player.info

            player:

                read:
                    type: bool
                    enforce_updates: true
                    lms_read_group_trigger@instance: player.info.player

                status_subscribe:
                    type: bool
                    lms_command@instance: player.info.player.status_subscribe
                    lms_read@instance: true
                    lms_write@instance: true

                status:
                    type: str
                    lms_command@instance: player.info.player.status
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   player
                    -   player.info
                    -   player.info.player

                connected:
                    type: bool
                    lms_command@instance: player.info.player.connected
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   player
                    -   player.info
                    -   player.info.player

                ip:
                    type: str
                    lms_command@instance: player.info.player.ip
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   player
                    -   player.info
                    -   player.info.player

                modelname:
                    type: str
                    lms_command@instance: player.info.player.modelname
                    lms_read@instance: false
                    lms_write@instance: false

                firmware:
                    type: str
                    lms_command@instance: player.info.player.firmware
                    lms_read@instance: false
                    lms_write@instance: false

                name:
                    type: str
                    lms_command@instance: player.info.player.name
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   player
                    -   player.info
                    -   player.info.player

                signalstrength:
                    type: num
                    lms_command@instance: player.info.player.signalstrength
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   player
                    -   player.info
                    -   player.info.player

                albumarturl:
                    type: str
                    lms_command@instance: player.info.player.albumarturl
                    lms_read@instance: true
                    lms_write@instance: false
                    remark: This item gets automatically defined and overwritten based on (web_)host and web_port

            currentsong:

                read:
                    type: bool
                    enforce_updates: true
                    lms_read_group_trigger@instance: player.info.currentsong

                genre:
                    type: str
                    lms_command@instance: player.info.currentsong.genre
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   player
                    -   player.info
                    -   player.info.currentsong

                artist:
                    type: str
                    lms_command@instance: player.info.currentsong.artist
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   player
                    -   player.info
                    -   player.info.currentsong

                album:
                    type: str
                    lms_command@instance: player.info.currentsong.album
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   player
                    -   player.info
                    -   player.info.currentsong

                title:
                    type: str
                    lms_command@instance: player.info.currentsong.title
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   player
                    -   player.info
                    -   player.info.currentsong
                    lms_read_initial@instance: true

                file_path:
                    type: str
                    lms_command@instance: player.info.currentsong.file_path
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   player
                    -   player.info
                    -   player.info.currentsong

                duration:
                    type: num
                    lms_command@instance: player.info.currentsong.duration
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   player
                    -   player.info
                    -   player.info.currentsong

                    duration_format:
                        type: str
                        eval: "'{}d {}h {}i {}s'.format(int(sh...()//86400), int((sh...()%86400)//3600), int((sh...()%3600)//60), round((sh...()%3600)%60))"
                        eval_trigger: '..'

    ALL:

        read:
            type: bool
            enforce_updates: true
            lms_read_group_trigger@instance: ALL

        server:

            read:
                type: bool
                enforce_updates: true
                lms_read_group_trigger@instance: ALL.server

            version:
                type: str
                lms_command@instance: server.version
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   ALL
                -   ALL.server
                lms_read_initial@instance: true

            restart:
                type: bool
                lms_command@instance: server.restart
                lms_read@instance: false
                lms_write@instance: true
                enforce_updates: true

            listenmode:
                type: bool
                lms_command@instance: server.listenmode
                lms_read@instance: true
                lms_write@instance: true

            playercount:
                type: num
                lms_command@instance: server.playercount
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   ALL
                -   ALL.server

            favoritescount:
                type: num
                lms_command@instance: server.favoritescount
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   ALL
                -   ALL.server
                lms_read_initial@instance: true

            syncgroups:

                read:
                    type: bool
                    enforce_updates: true
                    lms_read_group_trigger@instance: ALL.server.syncgroups

                members:
                    type: list
                    lms_command@instance: server.syncgroups.members
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.server
                    -   ALL.server.syncgroups
                    lms_read_initial@instance: true

                names:
                    type: list
                    lms_command@instance: server.syncgroups.names
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.server
                    -   ALL.server.syncgroups

            newclient:
                type: str
                lms_command@instance: server.newclient
                lms_read@instance: true
                lms_write@instance: false

            forgetclient:
                type: str
                lms_command@instance: server.forgetclient
                lms_read@instance: true
                lms_write@instance: false

            players:
                type: dict
                lms_command@instance: server.players
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   ALL
                -   ALL.server
                lms_read_initial@instance: true
                on_change: '.lu_names = {key: value["name"] for key, value in sh..self().items()}'

                lu_names:
                    type: dict
                    lms_lookup@instance: PLAYERS#fwd

                    lookup:
                        type: list
                        lms_lookup@instance: PLAYERS#list

            playlists:

                read:
                    type: bool
                    enforce_updates: true
                    lms_read_group_trigger@instance: ALL.server.playlists

                available:
                    type: dict
                    lms_command@instance: server.playlists.available
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.server
                    -   ALL.server.playlists
                    lms_read_initial@instance: true
                    on_change:
                    -   '.lu_ids = {value["id"]: key for key, value in sh..self().items()}'
                    -   '.lu_urls = {value["url"]: key for key, value in sh..self().items()}'

                    lu_ids:
                        type: dict
                        lms_lookup@instance: PLAYLIST_IDS#fwd

                        lookup:
                            type: list
                            lms_lookup@instance: PLAYLIST_IDS#list

                    lu_urls:
                        type: dict
                        lms_lookup@instance: PLAYLIST_URLS#fwd

                        lookup:
                            type: list
                            lms_lookup@instance: PLAYLIST_URLS#list

                rename:
                    type: str
                    lms_command@instance: server.playlists.rename
                    lms_read@instance: false
                    lms_write@instance: true
                    remark: '"needed value:<playlist_id> <newname> with a space inbetween"'

                delete:
                    type: str
                    lms_command@instance: server.playlists.delete
                    lms_read@instance: true
                    lms_write@instance: true
                    enforce_updates: true

                    lookup:
                        type: list
                        eval: sh....available.lu_ids.lookup.property.value
                        eval_trigger: '...available.lu_ids.lookup'

        database:

            read:
                type: bool
                enforce_updates: true
                lms_read_group_trigger@instance: ALL.database

            rescan:

                read:
                    type: bool
                    enforce_updates: true
                    lms_read_group_trigger@instance: ALL.database.rescan

                start:
                    type: str
                    lms_command@instance: database.rescan.start
                    lms_read@instance: false
                    lms_write@instance: true
                    enforce_updates: true
                    remark: '"playlists|onlinelibrary|external|full|full file://some/path"'

                running:
                    type: bool
                    lms_command@instance: database.rescan.running
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.database
                    -   ALL.database.rescan
                    lms_read_initial@instance: true
                    lms_read_cycle@instance: '120'

                progress:
                    type: str
                    lms_command@instance: database.rescan.progress
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.database
                    -   ALL.database.rescan

                    poll:
                        type: bool
                        eval: True if sh....running() == True else None
                        enforce_updates: true
                        cycle: '20'
                        lms_read_group_trigger: database.rescan

                    starttime:
                        type: str
                        eval_trigger: '..'
                        eval: '"-" if len(sh...()) == 0 else shtime.datetime_transform(float(sh.squeezebox.rescan.progress().split("||")[0])).strftime("%d.%m.%Y %H:%M:%S")'

                    info:
                        type: str
                        eval_trigger: '..'
                        eval: '"-" if len(sh...()) < 3 else sh...().split("||")[2]'

                    step:
                        type: num
                        eval_trigger: '..'
                        eval: 0 if len(sh...()) < 4 else sh...().split("||")[3]

                    totalsteps:
                        type: num
                        eval_trigger: '..'
                        eval: 0 if len(sh...()) <5 else sh...().split("||")[4]

                runningtime:
                    type: str
                    lms_command@instance: database.rescan.runningtime
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.database
                    -   ALL.database.rescan

                fail:
                    type: str
                    lms_command@instance: database.rescan.fail
                    lms_read@instance: true
                    lms_write@instance: false

                abortscan:
                    type: bool
                    lms_command@instance: database.rescan.abortscan
                    lms_read@instance: true
                    lms_write@instance: true
                    enforce_updates: true

                wipecache:
                    type: bool
                    lms_command@instance: database.rescan.wipecache
                    lms_read@instance: true
                    lms_write@instance: true
                    enforce_updates: true
                    remark: Be aware - this starts a complete library rescan

            totalgenres:
                type: num
                lms_command@instance: database.totalgenres
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   ALL
                -   ALL.database
                lms_read_initial@instance: true

            totalduration:
                type: num
                lms_command@instance: database.totalduration
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   ALL
                -   ALL.database
                lms_read_initial@instance: true

                duration_format:
                    type: str
                    eval: "'{}d {}h {}i {}s'.format(int(sh...()//86400), int((sh...()%86400)//3600), int((sh...()%3600)//60), round((sh...()%3600)%60))"
                    eval_trigger: '..'

            totalartists:
                type: num
                lms_command@instance: database.totalartists
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   ALL
                -   ALL.database
                lms_read_initial@instance: true

            totalalbums:
                type: num
                lms_command@instance: database.totalalbums
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   ALL
                -   ALL.database
                lms_read_initial@instance: true

            totalsongs:
                type: num
                lms_command@instance: database.totalsongs
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   ALL
                -   ALL.database
                lms_read_initial@instance: true

            totalplaylists:
                type: num
                lms_command@instance: database.totalplaylists
                lms_read@instance: true
                lms_write@instance: false
                lms_read_group@instance:
                -   ALL
                -   ALL.database

        server_plugins:

            read:
                type: bool
                enforce_updates: true
                lms_read_group_trigger@instance: ALL.server_plugins

            trackstat:

                read:
                    type: bool
                    enforce_updates: true
                    lms_read_group_trigger@instance: ALL.server_plugins.trackstat

                get_rating:
                    type: str
                    lms_command@instance: server_plugins.trackstat.get_rating
                    lms_read@instance: true
                    lms_write@instance: true

                set_rating:
                    type: str
                    lms_command@instance: server_plugins.trackstat.set_rating
                    lms_read@instance: false
                    lms_write@instance: true

        player_plugins:

            read:
                type: bool
                enforce_updates: true
                lms_read_group_trigger@instance: ALL.player_plugins

            customskip:

                read:
                    type: bool
                    enforce_updates: true
                    lms_read_group_trigger@instance: ALL.player_plugins.customskip

                active_filter:
                    type: str
                    lms_command@instance: player_plugins.customskip.active_filter
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player_plugins
                    -   ALL.player_plugins.customskip
                    lms_read_initial@instance: true

                remove_filter:
                    type: bool
                    lms_command@instance: player_plugins.customskip.remove_filter
                    lms_read@instance: false
                    lms_write@instance: true

        player:

            read:
                type: bool
                enforce_updates: true
                lms_read_group_trigger@instance: ALL.player

            control:

                read:
                    type: bool
                    enforce_updates: true
                    lms_read_group_trigger@instance: ALL.player.control

                power:
                    type: bool
                    lms_command@instance: player.control.power
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.control
                    enforce_updates: true
                    lms_read_initial@instance: true

                playmode:
                    type: str
                    lms_command@instance: player.control.playmode
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.control
                    enforce_updates: true

                playpause:
                    type: bool
                    lms_command@instance: player.control.playpause
                    lms_read@instance: true
                    lms_write@instance: true
                    enforce_updates: true

                stop:
                    type: bool
                    lms_command@instance: player.control.stop
                    lms_read@instance: true
                    lms_write@instance: true
                    enforce_updates: true

                mute:
                    type: bool
                    lms_command@instance: player.control.mute
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.control
                    enforce_updates: true
                    lms_read_initial@instance: true

                volume:
                    type: num
                    lms_command@instance: player.control.volume
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.control
                    lms_read_initial@instance: true

                volume_fading:
                    type: num
                    lms_command@instance: player.control.volume_fading
                    lms_read@instance: false
                    lms_write@instance: true

                    goal:
                        type: num
                        visu_acl: rw
                        cache: 'True'

                volume_low:
                    type: num
                    lms_command@instance: player.control.volume_low
                    lms_read@instance: false
                    lms_write@instance: true
                    cache: true
                    enforce_updates: true
                    initial_value: 60

                volume_high:
                    type: num
                    lms_command@instance: player.control.volume_high
                    lms_read@instance: false
                    lms_write@instance: true
                    cache: true
                    enforce_updates: true
                    initial_value: 80

                volumeup:
                    type: num
                    lms_command@instance: player.control.volumeup
                    lms_read@instance: false
                    lms_write@instance: true
                    cache: true
                    enforce_updates: true
                    initial_value: 1

                volumedown:
                    type: num
                    lms_command@instance: player.control.volumedown
                    lms_read@instance: false
                    lms_write@instance: true
                    cache: true
                    enforce_updates: true
                    initial_value: 1

                set_alarm:
                    type: str
                    lms_command@instance: player.control.set_alarm
                    lms_read@instance: true
                    lms_write@instance: true
                    on_change: ..alarms.query = True

                alarms:
                    type: dict
                    lms_command@instance: player.control.alarms
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.control
                    -   player.control.alarms
                    lms_read_initial@instance: true

                    query:
                        type: bool
                        enforce_updates: 'true'
                        lms_read_group_trigger: player.control.alarms

                sync:
                    type: str
                    lms_command@instance: player.control.sync
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.control
                    enforce_updates: true
                    lms_read_initial@instance: true
                    remark: This can be either a name or MAC address of a connected player. Make sure to include the server struct to fill the lookup table correctly.

                sync_status:
                    type: list
                    lms_command@instance: player.control.sync_status
                    lms_read@instance: false
                    lms_write@instance: false

                unsync:
                    type: bool
                    lms_command@instance: player.control.unsync
                    lms_read@instance: false
                    lms_write@instance: true
                    enforce_updates: true

                display:
                    type: str
                    lms_command@instance: player.control.display
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.control
                    lms_read_initial@instance: true

                connect:
                    type: str
                    lms_command@instance: player.control.connect
                    lms_read@instance: true
                    lms_write@instance: true
                    remark: ip|www.mysqueezebox.com|www.test.mysqueezebox.com

                disconnect:
                    type: str
                    lms_command@instance: player.control.disconnect
                    lms_read@instance: true
                    lms_write@instance: true
                    remark: ip|www.mysqueezebox.com|www.test.mysqueezebox.com

                time:
                    type: num
                    lms_command@instance: player.control.time
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.control
                    -   player.control.time_poll
                    enforce_updates: true

                    poll:
                        type: bool
                        eval: True if sh....playmode() == "play" else None
                        enforce_updates: 'true'
                        cycle: '10'
                        lms_read_group_trigger: player.control.time_poll

                forward:
                    type: num
                    lms_command@instance: player.control.forward
                    lms_read@instance: true
                    lms_write@instance: true
                    enforce_updates: true
                    initial_value: 10

                rewind:
                    type: num
                    lms_command@instance: player.control.rewind
                    lms_read@instance: true
                    lms_write@instance: true
                    enforce_updates: true
                    initial_value: 10

                playitem:
                    type: str
                    lms_command@instance: player.control.playitem
                    lms_read@instance: false
                    lms_write@instance: true
                    remark: provide specified song URL, playlist or directory. Gets player right away.

                sleep:
                    type: num
                    lms_command@instance: player.control.sleep
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.control
                    lms_read_initial@instance: true

            playlist:

                read:
                    type: bool
                    enforce_updates: true
                    lms_read_group_trigger@instance: ALL.player.playlist

                rename_current:
                    type: str
                    lms_command@instance: player.playlist.rename_current
                    lms_read@instance: false
                    lms_write@instance: true
                    enforce_updates: true

                delete_current:
                    type: bool
                    lms_command@instance: player.playlist.delete_current
                    lms_read@instance: false
                    lms_write@instance: true
                    enforce_updates: true
                    remark: Be careful, instantly deletes the current playlist!

                repeat:
                    type: str
                    lms_command@instance: player.playlist.repeat
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.playlist
                    lms_read_initial@instance: true
                    initial_value: OFF
                    remark: 0 = Off, 1 = Song, 2 = Playlist

                    lookup:
                        type: list
                        lms_lookup@instance: REPEAT#list

                shuffle:
                    type: str
                    lms_command@instance: player.playlist.shuffle
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.playlist
                    lms_read_initial@instance: true
                    initial_value: OFF
                    remark: 0 = Off, 1 = Song, 2 = Album

                    lookup:
                        type: list
                        lms_lookup@instance: SHUFFLE#list

                index:
                    type: str
                    lms_command@instance: player.playlist.index
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.playlist

                current_name:
                    type: str
                    lms_command@instance: player.playlist.current_name
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.playlist

                current_url:
                    type: str
                    lms_command@instance: player.playlist.current_url
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.playlist

                current_id:
                    type: num
                    lms_command@instance: player.playlist.current_id
                    lms_read@instance: true
                    lms_write@instance: true
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.playlist
                    lms_read_initial@instance: true

                save:
                    type: str
                    lms_command@instance: player.playlist.save
                    lms_read@instance: true
                    lms_write@instance: true
                    enforce_updates: true

                load:
                    type: str
                    lms_command@instance: player.playlist.load
                    lms_read@instance: true
                    lms_write@instance: true
                    enforce_updates: true

                loadalbum:
                    type: str
                    lms_command@instance: player.playlist.loadalbum
                    lms_read@instance: true
                    lms_write@instance: true
                    enforce_updates: true
                    remark: <Genre> <Artist> <Album>. You can use * for any of the entries. Spaces need to be replaced by %20

                loadtracks:
                    type: str
                    lms_command@instance: player.playlist.loadtracks
                    lms_read@instance: true
                    lms_write@instance: true
                    enforce_updates: true
                    remark: loads and plays all songs matching the specified searchparam criteria directly

                additem:
                    type: str
                    lms_command@instance: player.playlist.additem
                    lms_read@instance: false
                    lms_write@instance: true
                    enforce_updates: true
                    remark: provide specified song URL, playlist or directory

                addalbum:
                    type: str
                    lms_command@instance: player.playlist.addalbum
                    lms_read@instance: false
                    lms_write@instance: true
                    enforce_updates: true
                    remark: <Genre> <Artist> <Album>. You can use * for any of the entries. Spaces need to be replaced by %20

                addtracks:
                    type: str
                    lms_command@instance: player.playlist.addtracks
                    lms_read@instance: false
                    lms_write@instance: true
                    enforce_updates: true
                    remark: appends all songs matching the specified searchparam criteria onto the end of the playlist

                insertalbum:
                    type: str
                    lms_command@instance: player.playlist.insertalbum
                    lms_read@instance: false
                    lms_write@instance: true
                    enforce_updates: true
                    remark: <Genre> <Artist> <Album>. You can use * for any of the entries. Spaces need to be replaced by %20

                insertitem:
                    type: str
                    lms_command@instance: player.playlist.insertitem
                    lms_read@instance: false
                    lms_write@instance: true
                    enforce_updates: true
                    remark: provide specified song URL, playlist or directory

                deletesong:
                    type: num
                    lms_command@instance: player.playlist.deletesong
                    lms_read@instance: false
                    lms_write@instance: true
                    enforce_updates: true
                    remark: provide songindex that should be deleted

                deletealbum:
                    type: str
                    lms_command@instance: player.playlist.deletealbum
                    lms_read@instance: false
                    lms_write@instance: true
                    enforce_updates: true
                    remark: <Genre> <Artist> <Album>. You can use * for any of the entries. Spaces need to be replaced by %20

                deleteitem:
                    type: str
                    lms_command@instance: player.playlist.deleteitem
                    lms_read@instance: false
                    lms_write@instance: true
                    enforce_updates: true
                    remark: provide specified song URL, playlist or directory

                tracks:
                    type: num
                    lms_command@instance: player.playlist.tracks
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.playlist

                clear:
                    type: bool
                    lms_command@instance: player.playlist.clear
                    lms_read@instance: true
                    lms_write@instance: true
                    enforce_updates: true
                    remark: Might go berserk, use with care!

                preview:
                    type: str
                    lms_command@instance: player.playlist.preview
                    lms_read@instance: true
                    lms_write@instance: true

                next:
                    type: num
                    lms_command@instance: player.playlist.next
                    lms_read@instance: false
                    lms_write@instance: true
                    enforce_updates: true
                    initial_value: 1

                previous:
                    type: num
                    lms_command@instance: player.playlist.previous
                    lms_read@instance: false
                    lms_write@instance: true
                    enforce_updates: true
                    initial_value: 1

                modified:
                    type: bool
                    lms_command@instance: player.playlist.modified
                    lms_read@instance: true
                    lms_write@instance: false
                    lms_read_group@instance:
                    -   ALL
                    -   ALL.player
                    -   ALL.player.playlist

            info:

                read:
                    type: bool
                    enforce_updates: true
                    lms_read_group_trigger@instance: ALL.player.info

                player:

                    read:
                        type: bool
                        enforce_updates: true
                        lms_read_group_trigger@instance: ALL.player.info.player

                    status_subscribe:
                        type: bool
                        lms_command@instance: player.info.player.status_subscribe
                        lms_read@instance: true
                        lms_write@instance: true

                    status:
                        type: str
                        lms_command@instance: player.info.player.status
                        lms_read@instance: true
                        lms_write@instance: false
                        lms_read_group@instance:
                        -   ALL
                        -   ALL.player
                        -   ALL.player.info
                        -   ALL.player.info.player

                    connected:
                        type: bool
                        lms_command@instance: player.info.player.connected
                        lms_read@instance: true
                        lms_write@instance: false
                        lms_read_group@instance:
                        -   ALL
                        -   ALL.player
                        -   ALL.player.info
                        -   ALL.player.info.player

                    ip:
                        type: str
                        lms_command@instance: player.info.player.ip
                        lms_read@instance: true
                        lms_write@instance: false
                        lms_read_group@instance:
                        -   ALL
                        -   ALL.player
                        -   ALL.player.info
                        -   ALL.player.info.player

                    modelname:
                        type: str
                        lms_command@instance: player.info.player.modelname
                        lms_read@instance: false
                        lms_write@instance: false

                    firmware:
                        type: str
                        lms_command@instance: player.info.player.firmware
                        lms_read@instance: false
                        lms_write@instance: false

                    name:
                        type: str
                        lms_command@instance: player.info.player.name
                        lms_read@instance: true
                        lms_write@instance: true
                        lms_read_group@instance:
                        -   ALL
                        -   ALL.player
                        -   ALL.player.info
                        -   ALL.player.info.player

                    signalstrength:
                        type: num
                        lms_command@instance: player.info.player.signalstrength
                        lms_read@instance: true
                        lms_write@instance: false
                        lms_read_group@instance:
                        -   ALL
                        -   ALL.player
                        -   ALL.player.info
                        -   ALL.player.info.player

                    albumarturl:
                        type: str
                        lms_command@instance: player.info.player.albumarturl
                        lms_read@instance: true
                        lms_write@instance: false
                        remark: This item gets automatically defined and overwritten based on (web_)host and web_port

                currentsong:

                    read:
                        type: bool
                        enforce_updates: true
                        lms_read_group_trigger@instance: ALL.player.info.currentsong

                    genre:
                        type: str
                        lms_command@instance: player.info.currentsong.genre
                        lms_read@instance: true
                        lms_write@instance: false
                        lms_read_group@instance:
                        -   ALL
                        -   ALL.player
                        -   ALL.player.info
                        -   ALL.player.info.currentsong

                    artist:
                        type: str
                        lms_command@instance: player.info.currentsong.artist
                        lms_read@instance: true
                        lms_write@instance: false
                        lms_read_group@instance:
                        -   ALL
                        -   ALL.player
                        -   ALL.player.info
                        -   ALL.player.info.currentsong

                    album:
                        type: str
                        lms_command@instance: player.info.currentsong.album
                        lms_read@instance: true
                        lms_write@instance: false
                        lms_read_group@instance:
                        -   ALL
                        -   ALL.player
                        -   ALL.player.info
                        -   ALL.player.info.currentsong

                    title:
                        type: str
                        lms_command@instance: player.info.currentsong.title
                        lms_read@instance: true
                        lms_write@instance: false
                        lms_read_group@instance:
                        -   ALL
                        -   ALL.player
                        -   ALL.player.info
                        -   ALL.player.info.currentsong
                        lms_read_initial@instance: true

                    file_path:
                        type: str
                        lms_command@instance: player.info.currentsong.file_path
                        lms_read@instance: true
                        lms_write@instance: false
                        lms_read_group@instance:
                        -   ALL
                        -   ALL.player
                        -   ALL.player.info
                        -   ALL.player.info.currentsong

                    duration:
                        type: num
                        lms_command@instance: player.info.currentsong.duration
                        lms_read@instance: true
                        lms_write@instance: false
                        lms_read_group@instance:
                        -   ALL
                        -   ALL.player
                        -   ALL.player.info
                        -   ALL.player.info.currentsong

                        duration_format:
                            type: str
                            eval: "'{}d {}h {}i {}s'.format(int(sh...()//86400), int((sh...()%86400)//3600), int((sh...()%3600)//60), round((sh...()%3600)%60))"
                            eval_trigger: '..'
plugin_functions: NONE
logic_parameters: NONE
